name: CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt

      - name: Run Python Tests with Coverage
        run: |
          pytest --maxfail=5 --disable-warnings --cov=. --cov-report=xml

      - name: Upload Python Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: python
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Install C++ Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake g++ lcov

      - name: Configure and Build C++ Project
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" ..
          make

      - name: Run C++ Tests
        run: ./build/NNet  # Replace with your C++ executable name

      - name: Generate Code Coverage Report
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info --include '*/cpp/*' --ignore-errors unused
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload C++ Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: cpp
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
