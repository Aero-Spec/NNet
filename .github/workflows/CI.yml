name: CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install Python and Gcovr Dependencies
      - name: Install Python and Gcovr Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test_requirements.txt
          pip install gcovr

      # Step 4: Run Python Tests with Coverage
      - name: Run Python Tests with Coverage
        run: |
          pytest --maxfail=5 --disable-warnings --cov=. --cov-report=xml

      # Step 5: Install C++ Build Tools
      - name: Install C++ Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake g++ lcov

      # Step 6: Configure and Build C++ Project with Coverage
      - name: Configure and Build C++ Project
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" ..
          make

      # Step 7: Run C++ Tests
      - name: Run C++ Tests
        run: ./build/NNet  # Replace `NNet` with your C++ executable name

      # Step 8: Generate C++ Coverage Report
      - name: Generate C++ Coverage Report
        run: |
          cd build
          lcov --capture --directory . --output-file c++_coverage.info --include "*/cpp/*" --ignore-errors unused
          lcov --remove c++_coverage.info '/usr/*' --output-file c++_coverage.info --ignore-errors unused

      # Step 9: Convert Python Coverage to LCOV Format
      - name: Convert Python Coverage to LCOV
        run: |
          gcovr --add-tracefile coverage.xml --filter . --output python_coverage.info --convert-xml

      # Step 10: Combine Python and C++ Coverage
      - name: Combine Coverage Reports
        run: |
          lcov --add-tracefile build/c++_coverage.info --add-tracefile python_coverage.info --output-file combined_coverage.info
          lcov --list combined_coverage.info

      # Step 11: Upload Combined Coverage to Codecov
      - name: Upload Combined Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: combined
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
